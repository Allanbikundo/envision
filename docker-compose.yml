version: "3.9"

services:
  # üêò PostgreSQL ‚Äì Keycloak
  keycloak-db:
    image: postgres:16
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - "5435:5432"
    networks:
      - ecommerce-net
    volumes:
      - keycloak-data:/var/lib/postgresql/data

  # üîê Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    command: start-dev                 # production mode
    depends_on:
      - keycloak-db
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    networks:
      - ecommerce-net

  # üêò PostgreSQL ‚Äì Product Service
  product-db:
    image: postgres:16
    environment:
      POSTGRES_DB: productdb
      POSTGRES_USER: productuser
      POSTGRES_PASSWORD: productpass
    ports:
      - "5433:5432"
    networks:
      - ecommerce-net
    volumes:
      - product-data:/var/lib/postgresql/data

  # üêò PostgreSQL ‚Äì Order Service
  order-db:
    image: postgres:16
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: orderuser
      POSTGRES_PASSWORD: orderpass
    ports:
      - "5434:5432"
    networks:
      - ecommerce-net
    volumes:
      - order-data:/var/lib/postgresql/data

  # üêá RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - ecommerce-net

  # üì¶ Product Service
  product-service:
    image: ghcr.io/allanbikundo/product:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://product-db:5432/productdb
      SPRING_DATASOURCE_USERNAME: productuser
      SPRING_DATASOURCE_PASSWORD: productpass
      SPRING_RABBITMQ_HOST: rabbitmq
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
      KEYCLOAK_REALM: ecommerce
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: INFO
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB: INFO
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://envision.ambience.co.ke:8080/realms/ecommerce
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: http://keycloak:8080/realms/ecommerce/protocol/openid-connect/certs
    depends_on:
      - product-db
      - rabbitmq
      - keycloak
    ports:
      - "8081:8081"
    networks:
      - ecommerce-net

  # üõí Order Service
  order-service:
    image: ghcr.io/allanbikundo/order:main-e4f8760
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://order-db:5432/orderdb
      SPRING_DATASOURCE_USERNAME: orderuser
      SPRING_DATASOURCE_PASSWORD: orderpass
      SPRING_RABBITMQ_HOST: rabbitmq
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
      KEYCLOAK_REALM: ecommerce
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: INFO
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB: INFO
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://envision.ambience.co.ke:8080/realms/ecommerce
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: http://keycloak:8080/realms/ecommerce/protocol/openid-connect/certs
    depends_on:
      - order-db
      - rabbitmq
      - keycloak
    ports:
      - "8082:8082"
    networks:
      - ecommerce-net

  # üé® UI
  ui:
    image: ghcr.io/allanbikundo/ui:main-6d789ae
    ports:
      - "9080:9080"
    depends_on:
      - product-service
      - order-service
      - keycloak
    networks:
      - ecommerce-net

volumes:
  keycloak-data:
  product-data:
  order-data:

networks:
  ecommerce-net:
    driver: bridge